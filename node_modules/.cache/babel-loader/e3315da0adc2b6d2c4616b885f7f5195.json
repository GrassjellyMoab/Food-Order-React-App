{"ast":null,"code":"var _jsxFileName = \"/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/UI/CartModal/CartModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport CartToggleContext from \"../../Header+Cart/CartToggleContext/CartToggleContext\";\nimport classes from \"./CartModal.module.css\";\nimport Card from \"../Card/Card\";\nimport FoodContext from \"../../FoodPortion/FoodContext/FoodContext\";\nimport CartItem from \"../../Header+Cart/CartItem/CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartModal = props => {\n  _s();\n\n  const foodctx = useContext(FoodContext);\n  const cartctx = useContext(CartToggleContext);\n  const CartList = foodctx.FoodList; // add the sum of items in Cart\n\n  const TotalCost = CartList => {\n    var cost = 0; // loop thru list and multiply pric by quantity\n\n    for (let i in CartList) {\n      cost += +(CartList[i].Price * CartList[i].Quantity);\n    }\n\n    return cost;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"backdrop\"],\n      onClick: cartctx.toggleCartClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes[\"modal\"],\n      children: [CartList.map(item => {\n        if (item.Quantity > 0) {\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            id: item.id,\n            Quantity: item.Quantity,\n            Price: item.Price,\n            Food: item.food\n          }, \"Other\" + item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 20\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"cartModalBottom\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.right,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes[\"totalMoney\"],\n            children: [\"$\", TotalCost(CartList)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.close,\n              onClick: cartctx.toggleCartClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.order,\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartModal, \"fj4/R7J2lijO187cCcsnia2TATk=\");\n\n_c = CartModal;\nexport default CartModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartModal\");","map":{"version":3,"sources":["/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/UI/CartModal/CartModal.js"],"names":["React","useContext","CartToggleContext","classes","Card","FoodContext","CartItem","CartModal","props","foodctx","cartctx","CartList","FoodList","TotalCost","cost","i","Price","Quantity","toggleCartClose","map","item","id","food","right","close","order"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGR,UAAU,CAACI,WAAD,CAA1B;AACA,QAAMK,OAAO,GAAGT,UAAU,CAACC,iBAAD,CAA1B;AACA,QAAMS,QAAQ,GAAGF,OAAO,CAACG,QAAzB,CAH2B,CAK3B;;AACA,QAAMC,SAAS,GAAIF,QAAD,IAAc;AAC9B,QAAIG,IAAI,GAAG,CAAX,CAD8B,CAE9B;;AACA,SAAK,IAAIC,CAAT,IAAcJ,QAAd,EAAwB;AACtBG,MAAAA,IAAI,IAAI,EAAEH,QAAQ,CAACI,CAAD,CAAR,CAAYC,KAAZ,GAAkBL,QAAQ,CAACI,CAAD,CAAR,CAAYE,QAAhC,CAAR;AACD;;AACD,WAAOH,IAAP;AACD,GAPD;;AASA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AACE,MAAA,SAAS,EAAEX,OAAO,CAAC,UAAD,CADpB;AAEE,MAAA,OAAO,EAAEO,OAAO,CAACQ;AAFnB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEf,OAAO,CAAC,OAAD,CAAxB;AAAA,iBACGQ,QAAQ,CAACQ,GAAT,CAAcC,IAAD,IAAU;AACtB,YAAIA,IAAI,CAACH,QAAL,GAAgB,CAApB,EAAuB;AACrB,8BAAO,QAAC,QAAD;AAAgC,YAAA,EAAE,EAAEG,IAAI,CAACC,EAAzC;AAA6C,YAAA,QAAQ,EAAED,IAAI,CAACH,QAA5D;AAAsE,YAAA,KAAK,EAAEG,IAAI,CAACJ,KAAlF;AAAyF,YAAA,IAAI,EAAEI,IAAI,CAACE;AAApG,aAAe,UAAQF,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD,MAGK;AACH,iBAAO,IAAP;AACD;AACF,OAPA,CADH,eASE;AAAK,QAAA,SAAS,EAAElB,OAAO,CAAC,iBAAD,CAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEA,OAAO,CAACoB,KAAxB;AAAA,kCACE;AAAI,YAAA,SAAS,EAAEpB,OAAO,CAAC,YAAD,CAAtB;AAAA,4BAAwCU,SAAS,CAACF,QAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAER,OAAO,CAACqB,KAA3B;AAAkC,cAAA,OAAO,EAAEd,OAAO,CAACQ,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,SAAS,EAAEf,OAAO,CAACsB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA3CD;;GAAMlB,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport CartToggleContext from \"../../Header+Cart/CartToggleContext/CartToggleContext\";\nimport classes from \"./CartModal.module.css\";\nimport Card from \"../Card/Card\";\nimport FoodContext from \"../../FoodPortion/FoodContext/FoodContext\";\nimport CartItem from \"../../Header+Cart/CartItem/CartItem\";\n\nconst CartModal = (props) => {\n  const foodctx = useContext(FoodContext);\n  const cartctx = useContext(CartToggleContext);\n  const CartList = foodctx.FoodList;\n\n  // add the sum of items in Cart\n  const TotalCost = (CartList) => {\n    var cost = 0;\n    // loop thru list and multiply pric by quantity\n    for (let i in CartList) {\n      cost += +(CartList[i].Price*CartList[i].Quantity);\n    }\n    return cost;\n  }\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes[\"backdrop\"]}\n        onClick={cartctx.toggleCartClose}\n      ></div>\n      <Card className={classes[\"modal\"]}>\n        {CartList.map((item) => {\n          if (item.Quantity > 0) {\n            return <CartItem key={\"Other\"+item.id} id={item.id} Quantity={item.Quantity} Price={item.Price} Food={item.food}></CartItem>;\n          }\n          else {\n            return null;\n          }\n        })}\n        <div className={classes[\"cartModalBottom\"]}>\n          <h2>Total Amount</h2>\n          <div className={classes.right}>\n            <h2 className={classes[\"totalMoney\"]}>${TotalCost(CartList)}</h2>\n            <div>\n              <button className={classes.close} onClick={cartctx.toggleCartClose}>Close</button>\n              <button className={classes.order}>Order</button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default CartModal;\n"]},"metadata":{},"sourceType":"module"}