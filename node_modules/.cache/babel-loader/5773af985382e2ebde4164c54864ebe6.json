{"ast":null,"code":"var _jsxFileName = \"/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Food/Food.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport FoodItem from \"../FoodItem/FoodItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Food = props => {\n  _s();\n\n  // arr of foods stored in a state so that the quantity can be updated\n  const [foodList, setFoodList] = useState([{\n    food: \"Sushi\",\n    details: \"Finest fish and veggies\",\n    price: \"22.99\",\n    quantity: 1\n  }, {\n    food: \"Schnitzel\",\n    details: \"A german speciality!\",\n    price: \"16.50\",\n    quantity: 1\n  }, {\n    food: \"Barbecue Burger\",\n    details: \"American, raw, meaty\",\n    price: \"12.99\",\n    quantity: 1\n  }, {\n    food: \"Green Bowl\",\n    details: \"\",\n    price: \"Healthy...and green...\",\n    price: \"18.99\",\n    quantity: 1\n  }]); // function to retrieve food name and compare against food then add the input\n\n  const retrieveDetails = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodList.map(item => {\n        return /*#__PURE__*/_jsxDEV(FoodItem, {\n          food: item.food,\n          details: item.details,\n          price: item.price,\n          quantity: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Food, \"nudC1X2RcKZP+5z2rFMkd/s65hI=\");\n\n_c = Food;\nexport default Food;\n\nvar _c;\n\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"sources":["/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Food/Food.js"],"names":["React","useState","Card","FoodItem","Food","props","foodList","setFoodList","food","details","price","quantity","retrieveDetails","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB;AACF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CACvC;AACEO,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,OAAO,EAAE,yBAFX;AAGEC,IAAAA,KAAK,EAAE,OAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADuC,EAOvC;AACEH,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,OAAO,EAAE,sBAFX;AAGEC,IAAAA,KAAK,EAAE,OAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPuC,EAavC;AACEH,IAAAA,IAAI,EAAE,iBADR;AAEEC,IAAAA,OAAO,EAAE,sBAFX;AAGEC,IAAAA,KAAK,EAAE,OAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbuC,EAmBvC;AACEH,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,KAAK,EAAE,wBAHT;AAIEA,IAAAA,KAAK,EAAE,OAJT;AAKEC,IAAAA,QAAQ,EAAE;AALZ,GAnBuC,CAAD,CAAxC,CAFsB,CA8BtB;;AACA,QAAMC,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAKA,sBACE,QAAC,IAAD;AAAA,2BACE;AAAA,gBACGN,QAAQ,CAACO,GAAT,CAAcC,IAAD,IAAU;AACtB,4BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAEA,IAAI,CAACN,IADb;AAEE,UAAA,OAAO,EAAEM,IAAI,CAACL,OAFhB;AAGE,UAAA,KAAK,EAAEK,IAAI,CAACJ,KAHd;AAIE,UAAA,QAAQ,EAAEI,IAAI,CAACH;AAJjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApDD;;GAAMP,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport FoodItem from \"../FoodItem/FoodItem\";\n\nconst Food = (props) => {\n    // arr of foods stored in a state so that the quantity can be updated\n  const [foodList, setFoodList] = useState([\n    {\n      food: \"Sushi\",\n      details: \"Finest fish and veggies\",\n      price: \"22.99\",\n      quantity: 1,\n    },\n    {\n      food: \"Schnitzel\",\n      details: \"A german speciality!\",\n      price: \"16.50\",\n      quantity: 1,\n    },\n    {\n      food: \"Barbecue Burger\",\n      details: \"American, raw, meaty\",\n      price: \"12.99\",\n      quantity: 1,\n    },\n    {\n      food: \"Green Bowl\",\n      details: \"\",\n      price: \"Healthy...and green...\",\n      price: \"18.99\",\n      quantity: 1,\n    },\n  ]);\n\n  // function to retrieve food name and compare against food then add the input\n  const retrieveDetails = () => {\n\n  }\n\n\n  return (\n    <Card>\n      <ul>\n        {foodList.map((item) => {\n          return (\n            <FoodItem\n              food={item.food}\n              details={item.details}\n              price={item.price}\n              quantity={item.quantity}\n            ></FoodItem>\n          );\n        })}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Food;\n"]},"metadata":{},"sourceType":"module"}