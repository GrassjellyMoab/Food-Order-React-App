{"ast":null,"code":"var _jsxFileName = \"/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Header+Cart/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport FoodContext from \"../../FoodPortion/FoodContext/FoodContext\";\nimport CartItem from \"../../Header+Cart/CartItem/CartItem\";\nimport classes from \"./Cart.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  //use this then we can map out the cart Items using FoodinCart.id\n  const foodctx = useContext(FoodContext);\n  const CartList = foodctx.FoodList;\n  const [finalCost, setFinalCost] = useState(() => {\n    // total cost\n    var startCost = 0; // loop thru list and multiply price by quantity\n\n    for (let i in CartList) {\n      startCost += +(CartList[i].Price * CartList[i].Quantity);\n    }\n\n    return startCost;\n  }); // when there is a quantity change event, then we set a new Final Cost\n\n  const TotalCostChangeHandler = CartList => {\n    var cost = 0; // loop thru list and multiply pricw by quantity\n\n    for (let i in CartList) {\n      cost += +(CartList[i].Price * CartList[i].Quantity);\n    }\n\n    setFinalCost(cost);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"backdrop\"] // onClick={cartctx.toggleCartClose}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes[\"modal\"],\n      children: [CartList.map(item => {\n        if (item.Quantity > 0) {\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            id: item.id,\n            Quantity: item.Quantity,\n            Price: item.Price,\n            Food: item.food,\n            NewTotalCost: TotalCostChangeHandler\n          }, \"Other\" + item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"cartModalBottom\"],\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.right,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes[\"totalMoney\"],\n            children: [\"$\", finalCost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.close // onClick={cartctx.toggleCartClose}\n              ,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.order,\n              onClick: () => {},\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"cA0mtZYgBD2oeA6F0nZi/NFdSMw=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Header+Cart/Cart/Cart.js"],"names":["React","useContext","useState","Card","FoodContext","CartItem","classes","Cart","props","foodctx","CartList","FoodList","finalCost","setFinalCost","startCost","i","Price","Quantity","TotalCostChangeHandler","cost","map","item","id","food","right","close","order"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport FoodContext from \"../../FoodPortion/FoodContext/FoodContext\";\nimport CartItem from \"../../Header+Cart/CartItem/CartItem\";\nimport classes from \"./Cart.module.css\";\n\nconst Cart = (props) => {\n  //use this then we can map out the cart Items using FoodinCart.id\n  const foodctx = useContext(FoodContext);\n  const CartList = foodctx.FoodList;\n\n  const [finalCost, setFinalCost] = useState(() => {\n    // total cost\n    var startCost = 0;\n    // loop thru list and multiply price by quantity\n    for (let i in CartList) {\n      startCost += +(CartList[i].Price * CartList[i].Quantity);\n    }\n    return startCost;\n  });\n\n  // when there is a quantity change event, then we set a new Final Cost\n  const TotalCostChangeHandler = (CartList) => {\n    var cost = 0;\n    // loop thru list and multiply pricw by quantity\n    for (let i in CartList) {\n      cost += +(CartList[i].Price * CartList[i].Quantity);\n    }\n    setFinalCost(cost);\n  };\n\n\n  return (\n    <React.Fragment>\n      <div\n        className={classes[\"backdrop\"]}\n        // onClick={cartctx.toggleCartClose}\n      ></div>\n      <Card className={classes[\"modal\"]}>\n        {CartList.map((item) => {\n          if (item.Quantity > 0) {\n            return (\n              <CartItem\n                key={\"Other\" + item.id}\n                id={item.id}\n                Quantity={item.Quantity}\n                Price={item.Price}\n                Food={item.food}\n                NewTotalCost={TotalCostChangeHandler}\n              ></CartItem>\n            );\n          } else {\n            return null;\n          }\n        })}\n        <div className={classes[\"cartModalBottom\"]}>\n          <h2>Total Amount</h2>\n          <div className={classes.right}>\n            <h2 className={classes[\"totalMoney\"]}>${finalCost}</h2>\n            <div>\n              <button\n                className={classes.close}\n                // onClick={cartctx.toggleCartClose}\n              >\n                Close\n              </button>\n              <button className={classes.order} onClick={()=>{}}>\n                Order\n              </button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}