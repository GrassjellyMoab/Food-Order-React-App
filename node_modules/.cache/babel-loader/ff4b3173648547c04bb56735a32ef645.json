{"ast":null,"code":"var _jsxFileName = \"/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Header+Cart/CartItem/CartItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport FoodContext from \"../../FoodPortion/FoodContext/FoodContext\";\nimport classes from \"./CartItem.module.css\"; // Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartItem = props => {\n  _s();\n\n  const ctx = useContext(FoodContext); // Increase Quantity Button Handler -\n\n  const increaseButtonHandler = () => {\n    ctx.updateFoodList(props.id, 1);\n    quantityChangeHandler();\n    props.NewTotalCost(ctx.FoodList);\n  }; // Decrease Quantity Button Handler +\n\n\n  const decreaseButtonHandler = () => {\n    ctx.updateFoodList(props.id, -1);\n    quantityChangeHandler();\n    props.NewTotalCost(ctx.FoodList);\n  }; // state to store quantity value so that component can be instantly re-rendered\n\n\n  const [quantity, setQuantity] = useState(props.Quantity); // quantity change handler\n\n  const quantityChangeHandler = () => {\n    // find the new quantity value from list and update the state.\n    var x = 0;\n\n    for (let i in ctx.FoodList) {\n      if (ctx.FoodList[i].id === props.id) {\n        x = ctx.FoodList[i].Quantity;\n        break;\n      }\n    }\n\n    setQuantity(x);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"items\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"leftside\"],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes[\"item-details\"],\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: props.Food\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"$\", props.Price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.quantity,\n          children: [\"x\", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"rightside\"],\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decreaseButtonHandler,\n          children: \"\\u2012\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increaseButtonHandler,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartItem, \"bhbuh7Vop5xPRzHpvZA0pBN8zNg=\");\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Header+Cart/CartItem/CartItem.js"],"names":["React","useContext","useState","FoodContext","classes","CartItem","props","ctx","increaseButtonHandler","updateFoodList","id","quantityChangeHandler","NewTotalCost","FoodList","decreaseButtonHandler","quantity","setQuantity","Quantity","x","i","Food","Price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,GAAG,GAAGN,UAAU,CAACE,WAAD,CAAtB,CAD0B,CAE1B;;AACA,QAAMK,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,GAAG,CAACE,cAAJ,CAAmBH,KAAK,CAACI,EAAzB,EAA6B,CAA7B;AACAC,IAAAA,qBAAqB;AACrBL,IAAAA,KAAK,CAACM,YAAN,CAAmBL,GAAG,CAACM,QAAvB;AACD,GAJD,CAH0B,CAQ1B;;;AACA,QAAMC,qBAAqB,GAAG,MAAM;AAClCP,IAAAA,GAAG,CAACE,cAAJ,CAAmBH,KAAK,CAACI,EAAzB,EAA6B,CAAC,CAA9B;AACAC,IAAAA,qBAAqB;AACrBL,IAAAA,KAAK,CAACM,YAAN,CAAmBL,GAAG,CAACM,QAAvB;AACD,GAJD,CAT0B,CAe1B;;;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACI,KAAK,CAACW,QAAP,CAAxC,CAhB0B,CAkB1B;;AACA,QAAMN,qBAAqB,GAAG,MAAM;AAChC;AACA,QAAIO,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,CAAT,IAAcZ,GAAG,CAACM,QAAlB,EAA4B;AACxB,UAAIN,GAAG,CAACM,QAAJ,CAAaM,CAAb,EAAgBT,EAAhB,KAAuBJ,KAAK,CAACI,EAAjC,EAAqC;AACjCQ,QAAAA,CAAC,GAAGX,GAAG,CAACM,QAAJ,CAAaM,CAAb,EAAgBF,QAApB;AACA;AACH;AACJ;;AACDD,IAAAA,WAAW,CAACE,CAAD,CAAX;AACH,GAVD;;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAAC,OAAD,CAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEA,OAAO,CAAC,UAAD,CAAvB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEA,OAAO,CAAC,cAAD,CAAvB;AAAA,kCACE;AAAA,sBAAKE,KAAK,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,4BAAMd,KAAK,CAACe,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAEjB,OAAO,CAACW,QAAxB;AAAA,0BAAoCA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAAC,WAAD,CAAvB;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEU,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEN,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhDD;;GAAMH,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport FoodContext from \"../../FoodPortion/FoodContext/FoodContext\";\nimport classes from \"./CartItem.module.css\";\n\n// Component\nconst CartItem = (props) => {\n  const ctx = useContext(FoodContext);\n  // Increase Quantity Button Handler -\n  const increaseButtonHandler = () => {\n    ctx.updateFoodList(props.id, 1);\n    quantityChangeHandler();\n    props.NewTotalCost(ctx.FoodList);\n  };\n  // Decrease Quantity Button Handler +\n  const decreaseButtonHandler = () => {\n    ctx.updateFoodList(props.id, -1);\n    quantityChangeHandler();\n    props.NewTotalCost(ctx.FoodList);\n  };\n\n  // state to store quantity value so that component can be instantly re-rendered\n  const [quantity, setQuantity] = useState(props.Quantity);\n\n  // quantity change handler\n  const quantityChangeHandler = () => {\n      // find the new quantity value from list and update the state.\n      var x = 0;\n      for (let i in ctx.FoodList) {\n          if (ctx.FoodList[i].id === props.id) {\n              x = ctx.FoodList[i].Quantity;\n              break;\n          }\n      }\n      setQuantity(x);\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes[\"items\"]}>\n        <div className={classes[\"leftside\"]}>\n          <div className={classes[\"item-details\"]}>\n            <h3>{props.Food}</h3>\n            <h4>${props.Price}</h4>\n          </div>\n          <div className={classes.quantity}>x{quantity}</div>\n        </div>\n        <div className={classes[\"rightside\"]}>\n          <button onClick={decreaseButtonHandler}>â€’</button>\n          <button onClick={increaseButtonHandler}>+</button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}