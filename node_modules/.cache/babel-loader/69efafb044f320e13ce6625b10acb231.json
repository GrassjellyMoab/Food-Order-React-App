{"ast":null,"code":"import _objectSpread from\"/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// css\nimport classes from\"./Cart.module.css\";import{useContext}from\"react\";// components\nimport Modal from\"../../components/UI/Modal\";import CartContext from\"../Context/CartContext\";import CartItem from\"./CartItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(props){var cartCtx=useContext(CartContext);// adding item in cart\nvar addItemHandler=function addItemHandler(item){cartCtx.addItem(_objectSpread(_objectSpread({},item),{},{amount:1}));};// removing an item in cart\nvar removeItemHandler=function removeItemHandler(id){cartCtx.removeItem(id);};var cartItems=/*#__PURE__*/_jsx(\"ul\",{children:cartCtx.items.map(function(item){return/*#__PURE__*/_jsx(CartItem,{id:item.id,name:item.name,amount:item.amount,price:item.price,add:addItemHandler.bind(null,item),remove:removeItemHandler.bind(null,item.id)},item.id);})});return/*#__PURE__*/_jsxs(Modal,{onClose:props.closeCart,children:[cartItems,/*#__PURE__*/_jsx(\"div\",{className:classes[\"total\"],children:/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount\"})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes[\"button-alt\"],onClick:props.closeCart,children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.button,onClick:function onClick(){// if cart not empty\nif(cartCtx.totalAmount===0){alert(\"Order cannot be empty!\");}else{alert(\"Food has been Ordered!\");props.closeCart();}},children:\"Order\"})]})]});};export default Cart;","map":{"version":3,"sources":["/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/Cart/Cart.js"],"names":["classes","useContext","Modal","CartContext","CartItem","Cart","props","cartCtx","addItemHandler","item","addItem","amount","removeItemHandler","id","removeItem","cartItems","items","map","name","price","bind","closeCart","actions","button","totalAmount","alert"],"mappings":"wJAAA;AACA,MAAOA,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,OAAO,CAAGN,UAAU,CAACE,WAAD,CAA1B,CAEA;AACA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAU,CAC/BF,OAAO,CAACG,OAAR,gCAAoBD,IAApB,MAA0BE,MAAM,CAAE,CAAlC,IACD,CAFD,CAIA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,EAAD,CAAQ,CAChCN,OAAO,CAACO,UAAR,CAAmBD,EAAnB,EACD,CAFD,CAGA,GAAME,CAAAA,SAAS,cACb,oBACGR,OAAO,CAACS,KAAR,CAAcC,GAAd,CAAkB,SAACR,IAAD,qBACjB,KAAC,QAAD,EACE,EAAE,CAAEA,IAAI,CAACI,EADX,CAEE,IAAI,CAAEJ,IAAI,CAACS,IAFb,CAGE,MAAM,CAAET,IAAI,CAACE,MAHf,CAIE,KAAK,CAAEF,IAAI,CAACU,KAJd,CAME,GAAG,CAAEX,cAAc,CAACY,IAAf,CAAoB,IAApB,CAA0BX,IAA1B,CANP,CAOE,MAAM,CAAEG,iBAAiB,CAACQ,IAAlB,CAAuB,IAAvB,CAA6BX,IAAI,CAACI,EAAlC,CAPV,EAKOJ,IAAI,CAACI,EALZ,CADiB,EAAlB,CADH,EADF,CAgBA,mBACE,MAAC,KAAD,EAAO,OAAO,CAAEP,KAAK,CAACe,SAAtB,WACGN,SADH,cAEE,YAAK,SAAS,CAAEf,OAAO,CAAC,OAAD,CAAvB,uBACE,sCADF,EAFF,cAKE,aAAK,SAAS,CAAEA,OAAO,CAACsB,OAAxB,wBACE,eAAQ,SAAS,CAAEtB,OAAO,CAAC,YAAD,CAA1B,CAA0C,OAAO,CAAEM,KAAK,CAACe,SAAzD,mBADF,cAIE,eAAQ,SAAS,CAAErB,OAAO,CAACuB,MAA3B,CAAmC,OAAO,CAAE,kBAAM,CAChD;AACA,GAAIhB,OAAO,CAACiB,WAAR,GAAwB,CAA5B,CAA8B,CAC5BC,KAAK,CAAC,wBAAD,CAAL,CACD,CAFD,IAGK,CACHA,KAAK,CAAC,wBAAD,CAAL,CACAnB,KAAK,CAACe,SAAN,GACD,CACF,CATD,mBAJF,GALF,GADF,CAuBD,CAnDD,CAqDA,cAAehB,CAAAA,IAAf","sourcesContent":["// css\nimport classes from \"./Cart.module.css\";\nimport { useContext } from \"react\";\n// components\nimport Modal from \"../../components/UI/Modal\";\nimport CartContext from \"../Context/CartContext\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n\n  // adding item in cart\n  const addItemHandler = (item) => {\n    cartCtx.addItem({...item, amount: 1})\n  }\n\n  // removing an item in cart\n  const removeItemHandler = (id) => {\n    cartCtx.removeItem(id);\n  }\n  const cartItems = (\n    <ul>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          id={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          key={item.id}\n          add={addItemHandler.bind(null, item)}\n          remove={removeItemHandler.bind(null, item.id)}\n        ></CartItem>\n      ))}\n    </ul>\n  );\n\n  return (\n    <Modal onClose={props.closeCart}>\n      {cartItems}\n      <div className={classes[\"total\"]}>\n        <span>Total Amount</span>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes[\"button-alt\"]} onClick={props.closeCart}>\n          Close\n        </button>\n        <button className={classes.button} onClick={() => {\n          // if cart not empty\n          if (cartCtx.totalAmount === 0){\n            alert(\"Order cannot be empty!\");\n          }\n          else {\n            alert(\"Food has been Ordered!\");\n            props.closeCart();\n          }\n        }}>Order</button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}