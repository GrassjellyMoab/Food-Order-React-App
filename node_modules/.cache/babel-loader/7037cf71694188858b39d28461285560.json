{"ast":null,"code":"var _jsxFileName = \"/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/FoodPortion/FoodContext/FoodContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // cart's context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodContext = /*#__PURE__*/React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: item => {},\n  removeItem: id => {}\n}); // default cart state\n\nconst defaultCartstate = {\n  items: {},\n  totalAmount: 0\n}; // the cart's reducer function\n\nconst cartReducer = (state, action) => {}; // why we update the state dont immediately affect the cartheaderbutton quantity?\n\n\nexport const FoodContextProvider = props => {\n  _s();\n\n  // make a dynamic state to manage the state of the cart\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartstate);\n  return /*#__PURE__*/_jsxDEV(FoodContext.Provider, {\n    value: {},\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodContextProvider, \"WyYgp8/ATIagphpbiNtssWWNrqs=\");\n\n_c = FoodContextProvider;\nexport default FoodContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodContextProvider\");","map":{"version":3,"sources":["/Users/yanyixue/Desktop/HTML, CSS, JS/Learning react/Food-Order-App/src/components/FoodPortion/FoodContext/FoodContext.js"],"names":["React","useReducer","FoodContext","createContext","items","totalAmount","addItem","item","removeItem","id","defaultCartstate","cartReducer","state","action","FoodContextProvider","props","cartState","dispatchCartAction","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,WAAW,EAAE,CAFyB;AAGtCC,EAAAA,OAAO,EAAGC,IAAD,IAAU,CAAE,CAHiB;AAItCC,EAAAA,UAAU,EAAGC,EAAD,IAAQ,CAAE;AAJgB,CAApB,CAApB,C,CAOA;;AACA,MAAMC,gBAAgB,GAAG;AACvBN,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB,C,CAKA;;AACA,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAEtC,CAFD,C,CAIA;;;AACA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAE5C;AACA,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkChB,UAAU,CAACU,WAAD,EAAeD,gBAAf,CAAlD;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE,EADT;AAAA,cAIGK,KAAK,CAACG;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAdM;;GAAMJ,mB;;KAAAA,mB;AAgBb,eAAeZ,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\n// cart's context\nconst FoodContext = React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {}\n});\n\n// default cart state\nconst defaultCartstate = {\n  items: {},\n  totalAmount: 0\n}\n\n// the cart's reducer function\nconst cartReducer = (state, action) => {\n  \n}\n\n// why we update the state dont immediately affect the cartheaderbutton quantity?\nexport const FoodContextProvider = (props) => {\n\n  // make a dynamic state to manage the state of the cart\n  const [cartState, dispatchCartAction] = useReducer(cartReducer,  defaultCartstate)\n\n\n  return (\n    <FoodContext.Provider\n      value={{\n      }}\n    >\n      {props.children}\n    </FoodContext.Provider>\n  );\n};\n\nexport default FoodContext;\n"]},"metadata":{},"sourceType":"module"}